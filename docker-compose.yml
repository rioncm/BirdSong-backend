version: "3.9"

services:
  gitsync:
    image: registry.k8s.io/git-sync/git-sync:v4.1.0
    restart: unless-stopped
    env_file:
      - .env
    environment:
      GIT_SYNC_REPO: ${GIT_SYNC_REPO:?Set GIT_SYNC_REPO to the public repository URL}
      GIT_SYNC_BRANCH: ${GIT_SYNC_BRANCH:-main}
      GIT_SYNC_REV: ${GIT_SYNC_REV:-HEAD}
      GIT_SYNC_DEPTH: ${GIT_SYNC_DEPTH:-1}
      GIT_SYNC_ROOT: /workspace
      GIT_SYNC_DEST: repo
      GIT_SYNC_WAIT: ${GIT_SYNC_WAIT:-300}
      GIT_SYNC_ONE_TIME: ${GIT_SYNC_ONE_TIME:-false}
      GIT_SYNC_MAX_SYNC_FAILURES: ${GIT_SYNC_MAX_SYNC_FAILURES:-0}
      GIT_KNOWN_HOSTS: "false"
    volumes:
      - ./sync:/workspace

  backend:
    build:
      context: .
    container_name: birdsong-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      API_LOG_LEVEL: ${API_LOG_LEVEL:-info}
    depends_on:
      - gitsync
    volumes:
      - ./sync:/workspace:ro
      - ./app/data:/app/data
      - ./app/logs:/app/logs
      - ./app/temp:/app/temp
    ports:
      - "${API_PORT:-8000}:8000"
    command: >
      /bin/sh -c '
        CONFIG_SRC=/workspace/repo/backend/app/config.yaml;
        ATTEMPTS=${CONFIG_SYNC_ATTEMPTS:-30};
        SLEEP_SECONDS=${CONFIG_SYNC_WAIT_SECONDS:-2};
        COUNT=0;
        until [ -f "$CONFIG_SRC" ] || [ "$COUNT" -ge "$ATTEMPTS" ]; do
          COUNT=$((COUNT + 1));
          echo "Waiting for config sync ($COUNT/$ATTEMPTS)...";
          sleep "$SLEEP_SECONDS";
        done;
        if [ -f "$CONFIG_SRC" ]; then
          echo "Synced config found, updating /app/config.yaml";
          cp "$CONFIG_SRC" /app/config.yaml;
        else
          echo "Warning: config not found at $CONFIG_SRC; using baked image config.";
        fi;
        exec uvicorn api:app --host 0.0.0.0 --port 8000
      '
